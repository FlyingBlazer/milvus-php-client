<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: data_coord.proto

namespace Milvus\Proto\Data;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>milvus.proto.data.ChannelWatchInfo</code>
 */
class ChannelWatchInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.milvus.proto.data.VchannelInfo vchan = 1;</code>
     */
    protected $vchan = null;
    /**
     * Generated from protobuf field <code>int64 startTs = 2;</code>
     */
    protected $startTs = 0;
    /**
     * Generated from protobuf field <code>.milvus.proto.data.ChannelWatchState state = 3;</code>
     */
    protected $state = 0;
    /**
     * the timeout ts, datanode shall do nothing after it
     * NOT USED.
     *
     * Generated from protobuf field <code>int64 timeoutTs = 4;</code>
     */
    protected $timeoutTs = 0;
    /**
     * the schema of the collection to watch, to avoid get schema rpc issues.
     *
     * Generated from protobuf field <code>.milvus.proto.schema.CollectionSchema schema = 5;</code>
     */
    protected $schema = null;
    /**
     * watch progress
     *
     * Generated from protobuf field <code>int32 progress = 6;</code>
     */
    protected $progress = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Milvus\Proto\Data\VchannelInfo $vchan
     *     @type int|string $startTs
     *     @type int $state
     *     @type int|string $timeoutTs
     *           the timeout ts, datanode shall do nothing after it
     *           NOT USED.
     *     @type \Milvus\Proto\Schema\CollectionSchema $schema
     *           the schema of the collection to watch, to avoid get schema rpc issues.
     *     @type int $progress
     *           watch progress
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\DataCoord::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.data.VchannelInfo vchan = 1;</code>
     * @return \Milvus\Proto\Data\VchannelInfo|null
     */
    public function getVchan()
    {
        return $this->vchan;
    }

    public function hasVchan()
    {
        return isset($this->vchan);
    }

    public function clearVchan()
    {
        unset($this->vchan);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.data.VchannelInfo vchan = 1;</code>
     * @param \Milvus\Proto\Data\VchannelInfo $var
     * @return $this
     */
    public function setVchan($var)
    {
        GPBUtil::checkMessage($var, \Milvus\Proto\Data\VchannelInfo::class);
        $this->vchan = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 startTs = 2;</code>
     * @return int|string
     */
    public function getStartTs()
    {
        return $this->startTs;
    }

    /**
     * Generated from protobuf field <code>int64 startTs = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setStartTs($var)
    {
        GPBUtil::checkInt64($var);
        $this->startTs = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.data.ChannelWatchState state = 3;</code>
     * @return int
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.data.ChannelWatchState state = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Milvus\Proto\Data\ChannelWatchState::class);
        $this->state = $var;

        return $this;
    }

    /**
     * the timeout ts, datanode shall do nothing after it
     * NOT USED.
     *
     * Generated from protobuf field <code>int64 timeoutTs = 4;</code>
     * @return int|string
     */
    public function getTimeoutTs()
    {
        return $this->timeoutTs;
    }

    /**
     * the timeout ts, datanode shall do nothing after it
     * NOT USED.
     *
     * Generated from protobuf field <code>int64 timeoutTs = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTimeoutTs($var)
    {
        GPBUtil::checkInt64($var);
        $this->timeoutTs = $var;

        return $this;
    }

    /**
     * the schema of the collection to watch, to avoid get schema rpc issues.
     *
     * Generated from protobuf field <code>.milvus.proto.schema.CollectionSchema schema = 5;</code>
     * @return \Milvus\Proto\Schema\CollectionSchema|null
     */
    public function getSchema()
    {
        return $this->schema;
    }

    public function hasSchema()
    {
        return isset($this->schema);
    }

    public function clearSchema()
    {
        unset($this->schema);
    }

    /**
     * the schema of the collection to watch, to avoid get schema rpc issues.
     *
     * Generated from protobuf field <code>.milvus.proto.schema.CollectionSchema schema = 5;</code>
     * @param \Milvus\Proto\Schema\CollectionSchema $var
     * @return $this
     */
    public function setSchema($var)
    {
        GPBUtil::checkMessage($var, \Milvus\Proto\Schema\CollectionSchema::class);
        $this->schema = $var;

        return $this;
    }

    /**
     * watch progress
     *
     * Generated from protobuf field <code>int32 progress = 6;</code>
     * @return int
     */
    public function getProgress()
    {
        return $this->progress;
    }

    /**
     * watch progress
     *
     * Generated from protobuf field <code>int32 progress = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setProgress($var)
    {
        GPBUtil::checkInt32($var);
        $this->progress = $var;

        return $this;
    }

}

