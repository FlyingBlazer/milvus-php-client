<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: plan.proto

namespace Milvus\Proto\Plan;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>milvus.proto.plan.CompareExpr</code>
 */
class CompareExpr extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.milvus.proto.plan.ColumnInfo left_column_info = 1;</code>
     */
    protected $left_column_info = null;
    /**
     * Generated from protobuf field <code>.milvus.proto.plan.ColumnInfo right_column_info = 2;</code>
     */
    protected $right_column_info = null;
    /**
     * Generated from protobuf field <code>.milvus.proto.plan.OpType op = 3;</code>
     */
    protected $op = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Milvus\Proto\Plan\ColumnInfo $left_column_info
     *     @type \Milvus\Proto\Plan\ColumnInfo $right_column_info
     *     @type int $op
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Plan::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.plan.ColumnInfo left_column_info = 1;</code>
     * @return \Milvus\Proto\Plan\ColumnInfo|null
     */
    public function getLeftColumnInfo()
    {
        return $this->left_column_info;
    }

    public function hasLeftColumnInfo()
    {
        return isset($this->left_column_info);
    }

    public function clearLeftColumnInfo()
    {
        unset($this->left_column_info);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.plan.ColumnInfo left_column_info = 1;</code>
     * @param \Milvus\Proto\Plan\ColumnInfo $var
     * @return $this
     */
    public function setLeftColumnInfo($var)
    {
        GPBUtil::checkMessage($var, \Milvus\Proto\Plan\ColumnInfo::class);
        $this->left_column_info = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.plan.ColumnInfo right_column_info = 2;</code>
     * @return \Milvus\Proto\Plan\ColumnInfo|null
     */
    public function getRightColumnInfo()
    {
        return $this->right_column_info;
    }

    public function hasRightColumnInfo()
    {
        return isset($this->right_column_info);
    }

    public function clearRightColumnInfo()
    {
        unset($this->right_column_info);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.plan.ColumnInfo right_column_info = 2;</code>
     * @param \Milvus\Proto\Plan\ColumnInfo $var
     * @return $this
     */
    public function setRightColumnInfo($var)
    {
        GPBUtil::checkMessage($var, \Milvus\Proto\Plan\ColumnInfo::class);
        $this->right_column_info = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.plan.OpType op = 3;</code>
     * @return int
     */
    public function getOp()
    {
        return $this->op;
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.plan.OpType op = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setOp($var)
    {
        GPBUtil::checkEnum($var, \Milvus\Proto\Plan\OpType::class);
        $this->op = $var;

        return $this;
    }

}

