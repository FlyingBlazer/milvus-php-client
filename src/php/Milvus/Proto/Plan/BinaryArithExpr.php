<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: plan.proto

namespace Milvus\Proto\Plan;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>milvus.proto.plan.BinaryArithExpr</code>
 */
class BinaryArithExpr extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.milvus.proto.plan.Expr left = 1;</code>
     */
    protected $left = null;
    /**
     * Generated from protobuf field <code>.milvus.proto.plan.Expr right = 2;</code>
     */
    protected $right = null;
    /**
     * Generated from protobuf field <code>.milvus.proto.plan.ArithOpType op = 3;</code>
     */
    protected $op = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Milvus\Proto\Plan\Expr $left
     *     @type \Milvus\Proto\Plan\Expr $right
     *     @type int $op
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Plan::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.plan.Expr left = 1;</code>
     * @return \Milvus\Proto\Plan\Expr|null
     */
    public function getLeft()
    {
        return $this->left;
    }

    public function hasLeft()
    {
        return isset($this->left);
    }

    public function clearLeft()
    {
        unset($this->left);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.plan.Expr left = 1;</code>
     * @param \Milvus\Proto\Plan\Expr $var
     * @return $this
     */
    public function setLeft($var)
    {
        GPBUtil::checkMessage($var, \Milvus\Proto\Plan\Expr::class);
        $this->left = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.plan.Expr right = 2;</code>
     * @return \Milvus\Proto\Plan\Expr|null
     */
    public function getRight()
    {
        return $this->right;
    }

    public function hasRight()
    {
        return isset($this->right);
    }

    public function clearRight()
    {
        unset($this->right);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.plan.Expr right = 2;</code>
     * @param \Milvus\Proto\Plan\Expr $var
     * @return $this
     */
    public function setRight($var)
    {
        GPBUtil::checkMessage($var, \Milvus\Proto\Plan\Expr::class);
        $this->right = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.plan.ArithOpType op = 3;</code>
     * @return int
     */
    public function getOp()
    {
        return $this->op;
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.plan.ArithOpType op = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setOp($var)
    {
        GPBUtil::checkEnum($var, \Milvus\Proto\Plan\ArithOpType::class);
        $this->op = $var;

        return $this;
    }

}

