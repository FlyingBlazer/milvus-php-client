<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: query_coord.proto

namespace Milvus\Proto\Query;

use UnexpectedValueException;

/**
 * Protobuf type <code>milvus.proto.query.PartitionState</code>
 */
class PartitionState
{
    /**
     * Generated from protobuf enum <code>NotExist = 0;</code>
     */
    const NotExist = 0;
    /**
     * Generated from protobuf enum <code>NotPresent = 1;</code>
     */
    const NotPresent = 1;
    /**
     * Generated from protobuf enum <code>OnDisk = 2;</code>
     */
    const OnDisk = 2;
    /**
     * Generated from protobuf enum <code>PartialInMemory = 3;</code>
     */
    const PartialInMemory = 3;
    /**
     * Generated from protobuf enum <code>InMemory = 4;</code>
     */
    const InMemory = 4;
    /**
     * Generated from protobuf enum <code>PartialInGPU = 5;</code>
     */
    const PartialInGPU = 5;
    /**
     * Generated from protobuf enum <code>InGPU = 6;</code>
     */
    const InGPU = 6;

    private static $valueToName = [
        self::NotExist => 'NotExist',
        self::NotPresent => 'NotPresent',
        self::OnDisk => 'OnDisk',
        self::PartialInMemory => 'PartialInMemory',
        self::InMemory => 'InMemory',
        self::PartialInGPU => 'PartialInGPU',
        self::InGPU => 'InGPU',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

