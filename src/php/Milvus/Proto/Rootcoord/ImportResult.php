<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: root_coord.proto

namespace Milvus\Proto\Rootcoord;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>milvus.proto.rootcoord.ImportResult</code>
 */
class ImportResult extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.milvus.proto.common.Status status = 1;</code>
     */
    protected $status = null;
    /**
     * id of the task
     *
     * Generated from protobuf field <code>int64 task_id = 2;</code>
     */
    protected $task_id = 0;
    /**
     * id of the datanode which takes this task
     *
     * Generated from protobuf field <code>int64 datanode_id = 3;</code>
     */
    protected $datanode_id = 0;
    /**
     * state of the task
     *
     * Generated from protobuf field <code>.milvus.proto.common.ImportState state = 4;</code>
     */
    protected $state = 0;
    /**
     * id array of new sealed segments
     *
     * Generated from protobuf field <code>repeated int64 segments = 5;</code>
     */
    private $segments;
    /**
     * auto-generated ids for auto-id primary key
     *
     * Generated from protobuf field <code>repeated int64 auto_ids = 6;</code>
     */
    private $auto_ids;
    /**
     * how many rows are imported by this task
     *
     * Generated from protobuf field <code>int64 row_count = 7;</code>
     */
    protected $row_count = 0;
    /**
     * more informations about the task, file path, failed reason, etc.
     *
     * Generated from protobuf field <code>repeated .milvus.proto.common.KeyValuePair infos = 8;</code>
     */
    private $infos;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Milvus\Proto\Common\Status $status
     *     @type int|string $task_id
     *           id of the task
     *     @type int|string $datanode_id
     *           id of the datanode which takes this task
     *     @type int $state
     *           state of the task
     *     @type array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $segments
     *           id array of new sealed segments
     *     @type array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $auto_ids
     *           auto-generated ids for auto-id primary key
     *     @type int|string $row_count
     *           how many rows are imported by this task
     *     @type array<\Milvus\Proto\Common\KeyValuePair>|\Google\Protobuf\Internal\RepeatedField $infos
     *           more informations about the task, file path, failed reason, etc.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\RootCoord::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.common.Status status = 1;</code>
     * @return \Milvus\Proto\Common\Status|null
     */
    public function getStatus()
    {
        return $this->status;
    }

    public function hasStatus()
    {
        return isset($this->status);
    }

    public function clearStatus()
    {
        unset($this->status);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.common.Status status = 1;</code>
     * @param \Milvus\Proto\Common\Status $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkMessage($var, \Milvus\Proto\Common\Status::class);
        $this->status = $var;

        return $this;
    }

    /**
     * id of the task
     *
     * Generated from protobuf field <code>int64 task_id = 2;</code>
     * @return int|string
     */
    public function getTaskId()
    {
        return $this->task_id;
    }

    /**
     * id of the task
     *
     * Generated from protobuf field <code>int64 task_id = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTaskId($var)
    {
        GPBUtil::checkInt64($var);
        $this->task_id = $var;

        return $this;
    }

    /**
     * id of the datanode which takes this task
     *
     * Generated from protobuf field <code>int64 datanode_id = 3;</code>
     * @return int|string
     */
    public function getDatanodeId()
    {
        return $this->datanode_id;
    }

    /**
     * id of the datanode which takes this task
     *
     * Generated from protobuf field <code>int64 datanode_id = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDatanodeId($var)
    {
        GPBUtil::checkInt64($var);
        $this->datanode_id = $var;

        return $this;
    }

    /**
     * state of the task
     *
     * Generated from protobuf field <code>.milvus.proto.common.ImportState state = 4;</code>
     * @return int
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * state of the task
     *
     * Generated from protobuf field <code>.milvus.proto.common.ImportState state = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Milvus\Proto\Common\ImportState::class);
        $this->state = $var;

        return $this;
    }

    /**
     * id array of new sealed segments
     *
     * Generated from protobuf field <code>repeated int64 segments = 5;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSegments()
    {
        return $this->segments;
    }

    /**
     * id array of new sealed segments
     *
     * Generated from protobuf field <code>repeated int64 segments = 5;</code>
     * @param array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSegments($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::INT64);
        $this->segments = $arr;

        return $this;
    }

    /**
     * auto-generated ids for auto-id primary key
     *
     * Generated from protobuf field <code>repeated int64 auto_ids = 6;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getAutoIds()
    {
        return $this->auto_ids;
    }

    /**
     * auto-generated ids for auto-id primary key
     *
     * Generated from protobuf field <code>repeated int64 auto_ids = 6;</code>
     * @param array<int>|array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setAutoIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::INT64);
        $this->auto_ids = $arr;

        return $this;
    }

    /**
     * how many rows are imported by this task
     *
     * Generated from protobuf field <code>int64 row_count = 7;</code>
     * @return int|string
     */
    public function getRowCount()
    {
        return $this->row_count;
    }

    /**
     * how many rows are imported by this task
     *
     * Generated from protobuf field <code>int64 row_count = 7;</code>
     * @param int|string $var
     * @return $this
     */
    public function setRowCount($var)
    {
        GPBUtil::checkInt64($var);
        $this->row_count = $var;

        return $this;
    }

    /**
     * more informations about the task, file path, failed reason, etc.
     *
     * Generated from protobuf field <code>repeated .milvus.proto.common.KeyValuePair infos = 8;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getInfos()
    {
        return $this->infos;
    }

    /**
     * more informations about the task, file path, failed reason, etc.
     *
     * Generated from protobuf field <code>repeated .milvus.proto.common.KeyValuePair infos = 8;</code>
     * @param array<\Milvus\Proto\Common\KeyValuePair>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setInfos($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Milvus\Proto\Common\KeyValuePair::class);
        $this->infos = $arr;

        return $this;
    }

}

