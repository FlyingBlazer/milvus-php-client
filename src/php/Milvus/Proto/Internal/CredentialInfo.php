<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: internal.proto

namespace Milvus\Proto\Internal;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>milvus.proto.internal.CredentialInfo</code>
 */
class CredentialInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string username = 1;</code>
     */
    protected $username = '';
    /**
     * encrypted by bcrypt (for higher security level)
     *
     * Generated from protobuf field <code>string encrypted_password = 2;</code>
     */
    protected $encrypted_password = '';
    /**
     * Generated from protobuf field <code>string tenant = 3;</code>
     */
    protected $tenant = '';
    /**
     * Generated from protobuf field <code>bool is_super = 4;</code>
     */
    protected $is_super = false;
    /**
     * encrypted by sha256 (for good performance in cache mapping)
     *
     * Generated from protobuf field <code>string sha256_password = 5;</code>
     */
    protected $sha256_password = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $username
     *     @type string $encrypted_password
     *           encrypted by bcrypt (for higher security level)
     *     @type string $tenant
     *     @type bool $is_super
     *     @type string $sha256_password
     *           encrypted by sha256 (for good performance in cache mapping)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Internal::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string username = 1;</code>
     * @return string
     */
    public function getUsername()
    {
        return $this->username;
    }

    /**
     * Generated from protobuf field <code>string username = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setUsername($var)
    {
        GPBUtil::checkString($var, True);
        $this->username = $var;

        return $this;
    }

    /**
     * encrypted by bcrypt (for higher security level)
     *
     * Generated from protobuf field <code>string encrypted_password = 2;</code>
     * @return string
     */
    public function getEncryptedPassword()
    {
        return $this->encrypted_password;
    }

    /**
     * encrypted by bcrypt (for higher security level)
     *
     * Generated from protobuf field <code>string encrypted_password = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setEncryptedPassword($var)
    {
        GPBUtil::checkString($var, True);
        $this->encrypted_password = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string tenant = 3;</code>
     * @return string
     */
    public function getTenant()
    {
        return $this->tenant;
    }

    /**
     * Generated from protobuf field <code>string tenant = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setTenant($var)
    {
        GPBUtil::checkString($var, True);
        $this->tenant = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool is_super = 4;</code>
     * @return bool
     */
    public function getIsSuper()
    {
        return $this->is_super;
    }

    /**
     * Generated from protobuf field <code>bool is_super = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsSuper($var)
    {
        GPBUtil::checkBool($var);
        $this->is_super = $var;

        return $this;
    }

    /**
     * encrypted by sha256 (for good performance in cache mapping)
     *
     * Generated from protobuf field <code>string sha256_password = 5;</code>
     * @return string
     */
    public function getSha256Password()
    {
        return $this->sha256_password;
    }

    /**
     * encrypted by sha256 (for good performance in cache mapping)
     *
     * Generated from protobuf field <code>string sha256_password = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setSha256Password($var)
    {
        GPBUtil::checkString($var, True);
        $this->sha256_password = $var;

        return $this;
    }

}

