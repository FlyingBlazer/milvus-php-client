<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: internal.proto

namespace Milvus\Proto\Internal;

use UnexpectedValueException;

/**
 * Protobuf type <code>milvus.proto.internal.RateType</code>
 */
class RateType
{
    /**
     * Generated from protobuf enum <code>DDLCollection = 0;</code>
     */
    const DDLCollection = 0;
    /**
     * Generated from protobuf enum <code>DDLPartition = 1;</code>
     */
    const DDLPartition = 1;
    /**
     * Generated from protobuf enum <code>DDLIndex = 2;</code>
     */
    const DDLIndex = 2;
    /**
     * Generated from protobuf enum <code>DDLFlush = 3;</code>
     */
    const DDLFlush = 3;
    /**
     * Generated from protobuf enum <code>DDLCompaction = 4;</code>
     */
    const DDLCompaction = 4;
    /**
     * Generated from protobuf enum <code>DMLInsert = 5;</code>
     */
    const DMLInsert = 5;
    /**
     * Generated from protobuf enum <code>DMLDelete = 6;</code>
     */
    const DMLDelete = 6;
    /**
     * Generated from protobuf enum <code>DMLBulkLoad = 7;</code>
     */
    const DMLBulkLoad = 7;
    /**
     * Generated from protobuf enum <code>DQLSearch = 8;</code>
     */
    const DQLSearch = 8;
    /**
     * Generated from protobuf enum <code>DQLQuery = 9;</code>
     */
    const DQLQuery = 9;

    private static $valueToName = [
        self::DDLCollection => 'DDLCollection',
        self::DDLPartition => 'DDLPartition',
        self::DDLIndex => 'DDLIndex',
        self::DDLFlush => 'DDLFlush',
        self::DDLCompaction => 'DDLCompaction',
        self::DMLInsert => 'DMLInsert',
        self::DMLDelete => 'DMLDelete',
        self::DMLBulkLoad => 'DMLBulkLoad',
        self::DQLSearch => 'DQLSearch',
        self::DQLQuery => 'DQLQuery',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

