<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: schema.proto

namespace Milvus\Proto\Schema;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>milvus.proto.schema.ScalarField</code>
 */
class ScalarField extends \Google\Protobuf\Internal\Message
{
    protected $data;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Milvus\Proto\Schema\BoolArray $bool_data
     *     @type \Milvus\Proto\Schema\IntArray $int_data
     *     @type \Milvus\Proto\Schema\LongArray $long_data
     *     @type \Milvus\Proto\Schema\FloatArray $float_data
     *     @type \Milvus\Proto\Schema\DoubleArray $double_data
     *     @type \Milvus\Proto\Schema\StringArray $string_data
     *     @type \Milvus\Proto\Schema\BytesArray $bytes_data
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Schema::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.schema.BoolArray bool_data = 1;</code>
     * @return \Milvus\Proto\Schema\BoolArray|null
     */
    public function getBoolData()
    {
        return $this->readOneof(1);
    }

    public function hasBoolData()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.schema.BoolArray bool_data = 1;</code>
     * @param \Milvus\Proto\Schema\BoolArray $var
     * @return $this
     */
    public function setBoolData($var)
    {
        GPBUtil::checkMessage($var, \Milvus\Proto\Schema\BoolArray::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.schema.IntArray int_data = 2;</code>
     * @return \Milvus\Proto\Schema\IntArray|null
     */
    public function getIntData()
    {
        return $this->readOneof(2);
    }

    public function hasIntData()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.schema.IntArray int_data = 2;</code>
     * @param \Milvus\Proto\Schema\IntArray $var
     * @return $this
     */
    public function setIntData($var)
    {
        GPBUtil::checkMessage($var, \Milvus\Proto\Schema\IntArray::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.schema.LongArray long_data = 3;</code>
     * @return \Milvus\Proto\Schema\LongArray|null
     */
    public function getLongData()
    {
        return $this->readOneof(3);
    }

    public function hasLongData()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.schema.LongArray long_data = 3;</code>
     * @param \Milvus\Proto\Schema\LongArray $var
     * @return $this
     */
    public function setLongData($var)
    {
        GPBUtil::checkMessage($var, \Milvus\Proto\Schema\LongArray::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.schema.FloatArray float_data = 4;</code>
     * @return \Milvus\Proto\Schema\FloatArray|null
     */
    public function getFloatData()
    {
        return $this->readOneof(4);
    }

    public function hasFloatData()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.schema.FloatArray float_data = 4;</code>
     * @param \Milvus\Proto\Schema\FloatArray $var
     * @return $this
     */
    public function setFloatData($var)
    {
        GPBUtil::checkMessage($var, \Milvus\Proto\Schema\FloatArray::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.schema.DoubleArray double_data = 5;</code>
     * @return \Milvus\Proto\Schema\DoubleArray|null
     */
    public function getDoubleData()
    {
        return $this->readOneof(5);
    }

    public function hasDoubleData()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.schema.DoubleArray double_data = 5;</code>
     * @param \Milvus\Proto\Schema\DoubleArray $var
     * @return $this
     */
    public function setDoubleData($var)
    {
        GPBUtil::checkMessage($var, \Milvus\Proto\Schema\DoubleArray::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.schema.StringArray string_data = 6;</code>
     * @return \Milvus\Proto\Schema\StringArray|null
     */
    public function getStringData()
    {
        return $this->readOneof(6);
    }

    public function hasStringData()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.schema.StringArray string_data = 6;</code>
     * @param \Milvus\Proto\Schema\StringArray $var
     * @return $this
     */
    public function setStringData($var)
    {
        GPBUtil::checkMessage($var, \Milvus\Proto\Schema\StringArray::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.schema.BytesArray bytes_data = 7;</code>
     * @return \Milvus\Proto\Schema\BytesArray|null
     */
    public function getBytesData()
    {
        return $this->readOneof(7);
    }

    public function hasBytesData()
    {
        return $this->hasOneof(7);
    }

    /**
     * Generated from protobuf field <code>.milvus.proto.schema.BytesArray bytes_data = 7;</code>
     * @param \Milvus\Proto\Schema\BytesArray $var
     * @return $this
     */
    public function setBytesData($var)
    {
        GPBUtil::checkMessage($var, \Milvus\Proto\Schema\BytesArray::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getData()
    {
        return $this->whichOneof("data");
    }

}

